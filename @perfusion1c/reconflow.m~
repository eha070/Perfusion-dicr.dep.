function [qmat,perfmat,perfmatn,phimat] = reconflow()
% [qmat,perfmat,perfmatn,phimat] = perfusion1c.reconflow(0,'','syntconv','full','classic');

%data = 'kidney';
%data = 'random';
%data = 'brain';
% for i = 1 : numel(prm.reconflow.alpha)


% settings
[prm,Fmat] = settings;
prm.reconflow.prm.reconflow.alpha = 0;
prm.reconflow.regularization = '';
prm.reconflow.roitype = 'synt';
prm.reconflow.code = 'classic';


% indicator basename
basenameindicator = perfusion1c.providenameindicator(prm.phiopt,prm.Kopt,prm.dim,prm.aiftype,prm.T);

if isequal(data,'kidney')
    folder = ['SG1_FF1_FLASH'];

    % load perfusion time series
    pathload = [folder '/' 'flash3d_bh-crop-npreg-deform-GD.nii.gz'];
    msg = ['Loading ' pathload];
    disp(msg);
    [Cmat,hdr.perfusion] = cbiReadNifti(pathload);

    % load segmentation of kidney
    % pathload = [folder '/' 'flash3d_bh-crop-npreg-deform_segm_left_cortex.nii.gz'];
    pathload = [folder '/' 'flash3d_bh-crop-npreg-deform_segm_left_kidney.nii.gz'];
    msg = ['Loading ' pathload];
    disp(msg);
    [roi.organ1,hdr.kidney] = cbiReadNifti(pathload);
    pathload = [folder '/' 'flash3d_bh-crop-npreg-deform_segm_right_kidney.nii.gz'];
    msg = ['Loading ' pathload];
    disp(msg);
    [roi.organ2,hdr.kidney] = cbiReadNifti(pathload);

    % combine
    roi.organ = roi.organ1 + roi.organ2 > 0;

    % load AIF mask
    pathload = [folder '/' 'aif-mask.nii.gz'];
    msg = ['Loading ' pathload];
    disp(msg);
    [roi.aif,hdr.aif] = cbiReadNifti(pathload);
    load ball1;se = getball(ball,1,1);
    roi.aif = imerode(roi.aif,se);

    % read timeline
    pathload = [folder '/' 'timeline_bh.txt'];
    msg = ['Loading ' pathload];
    disp(msg);
    timeline = importdata(pathload);

    % pixel size
    h = hdr.perfusion.pixdim(2:4);
    h = rowvect(h);
    phiin = 1;
    
    % show4D(Cmat,roi.organ,roi.aif)
elseif isequal(data,'random')

    dim = [4,4,1,12];
    dim3 = dim(1:3);
    Cmat = rand(dim);
    roi.organ = zeros(dim3);
    roi.organ = ones(dim3);
    % roi.organ(4:6,4:6,2:4) = 1;
    roi.aif = zeros(dim3);
    roi.aif(1,1,1) = 1;
    timeline = 1:dim(4);
    h = [1,1,1];
    phiin = 1;
    
elseif isequal(data,'synt')
    
    pathload = [data '-' basenameindicator '-red-' int2str(prm.stepred) '.mat'];
    D = load(pathload);
    msg = ['Loading ' pathload];
    disp(msg);
    Cmat = D.Cmat;
    timeline = D.prm.timeline;
    aifval = D.aifval;
    h = prm.h;
    
elseif isequal(data,'syntconv')
    
    pathload = [data '-' basenameindicator '-red-' int2str(prm.stepred) '.mat'];
    msg = ['Loading ' pathload];
    disp(msg);
    D = load(pathload);
    Cmat = D.Cmat;
    timeline = D.prm.timeline;
    aifval = D.aifval;
    h = D.prm.h;
    
elseif isequal(data,'brain')

    D = load('ep_perf_mri_20030919_shifted.mat');
    Cmat = D.im;
    h = D.h;
    h(3) = h(2);%??
    clear D;
    dim = size(Cmat);
    dim3 = dim(1:3);
    ntime = dim(4);
    dt = 1.44;
    timeline = (0:ntime-1)'*dt;
    a = mean(Cmat,4);
    roi.organ = a > 150;
    load ball3;se = getball(ball,3,3);
    roi.organ = imopen(roi.organ,se);
    roi.organ = bwkeep(roi.organ,1,6);
    roi.organ = imfill(roi.organ,'holes');
%         roi.organ = ones(dim3);
    D = load('ep_perf_mri_20030919_shifted-aif.mat');
    roi.aif = D.aifroi;
    TE = 0.6; % s? M? der v?re. 0.6ms er ekstremt kort
    r = 4.1;%s, taken from DCE-MRI sequence using Dotarem?
    a = zeros(dim);
    eps = 0.01;
    % convert to concentration time curves
    % Using equation 11.7a in Kennan, Jager, T2 and T2*-w DCE-MRI:
    % blood perfusion and Volume estimation using Bolus Tracking, page
    % 371 (part of the BMED360 literature)
    for j = 1 : ntime
        a(:,:,:,j) = log(Cmat(:,:,:,j)./(Cmat(:,:,:,1) + eps));
    end;
    a = -a/(TE*r);
    % no negative concentrations
    a(a < 0) = 0;
    Cmat = a;
    % v = im2vec4D(Cmat,roi.aif);
    phiin = 1;
end;

% compute porosity
phimat = perfusion1c.porosity(Cmat,aifval,timeline);


% NaN and inf in data???
Cmat(isinf(Cmat)) = 0;
Cmat(isnan(Cmat)) = 0;

dim = size(Cmat);
dim3 = dim(1:3);
if isequal(roitype,'full')
    roi.organ = ones(dim3);
end;
% run perfusion code
if isequal(code,'minder')
    [qmat,perfmat,perfmatn] = perfusion1cminder(Cmat,timeline,roi.aif,phiin,roi.organ,h,prm.reconflow.alpha,prm.reconflow.regularization);
elseif isequal(code,'linear')
    [qmat,perfmat,perfmatn] = perfusion1c(Cmat,timeline,roi.aif,phiin,roi.organ,h,prm.reconflow.alpha);
elseif isequal(code,'classic')
    [qmat,perfmat,perfmatn] = perfusion1c.reconflowclassic(Cmat,timeline,roi.organ,aifval);
end;

savpaper = 1;
savdata = 1;

if savpaper == 1
    figure(1)
    imagesc(perfmatn,[0,300]);colormap(gray);axis off;colorbar;axis image;
    brighten(0.7);
    pathsave = ['figs/recon' '-' data  '-method-'  code  '-' basenameindicator '-red-' int2str(prm.stepred)  '-perfn'];
    msg = ['Saving ' pathsave];
    disp(msg);
    print(gcf,pathsave,'-deps')

    figure(2)
    imagesc(D.delay);colormap(gray);axis off;colorbar;axis image;
    pathsave = ['figs/recon' '-' data  '-method-'  code  '-' basenameindicator '-red-' int2str(prm.stepred)  '-delay'];
    msg = ['Saving ' pathsave];
    disp(msg);
    print(gcf,pathsave,'-deps')

    figure(3)
    imagesc(phimat);colormap(gray);axis off;colorbar;axis image;
    pathsave = ['figs/recon' '-' data  '-method-'  code  '-' basenameindicator '-red-' int2str(prm.stepred)  '-porosity'];
    msg = ['Saving ' pathsave];
    disp(msg);
    print(gcf,pathsave,'-deps')

end;

if savdata == 1
    % save results
    pathsave = ['recon' '-' data  '-method-'  code  '-' basenameindicator '-red-' int2str(prm.stepred)  '.mat'];
    msg = ['Saving ' pathsave];
    disp(msg);
    save(pathsave,'roi','h','timeline','qmat','perfmat','perfmatn','phimat');
end;
    
